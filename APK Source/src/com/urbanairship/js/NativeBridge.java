// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.urbanairship.js;

import com.urbanairship.Logger;
import com.urbanairship.util.UAStringUtil;
import java.io.UnsupportedEncodingException;

public class NativeBridge
{

    private static byte a[] = {
        85, 65, 105, 114, 115, 104, 105, 112, 46, 99, 
        97, 108, 108, 98, 97, 99, 107, 73, 68, 32, 
        61, 32, 48, 59, 10, 10, 85, 65, 105, 114, 
        115, 104, 105, 112, 46, 114, 117, 110, 65, 99, 
        116, 105, 111, 110, 32, 61, 32, 102, 117, 110, 
        99, 116, 105, 111, 110, 40, 97, 99, 116, 105, 
        111, 110, 78, 97, 109, 101, 44, 32, 97, 114, 
        103, 117, 109, 101, 110, 116, 44, 32, 99, 97, 
        108, 108, 98, 97, 99, 107, 41, 32, 123, 10, 
        32, 32, 32, 32, 85, 65, 105, 114, 115, 104, 
        105, 112, 46, 99, 97, 108, 108, 98, 97, 99, 
        107, 73, 68, 43, 43, 59, 10, 32, 32, 32, 
        32, 118, 97, 114, 32, 99, 97, 108, 108, 98, 
        97, 99, 107, 75, 101, 121, 32, 61, 32, 39, 
        117, 97, 45, 99, 98, 45, 39, 32, 43, 32, 
        85, 65, 105, 114, 115, 104, 105, 112, 46, 99, 
        97, 108, 108, 98, 97, 99, 107, 73, 68, 59, 
        10, 10, 32, 32, 32, 32, 119, 105, 110, 100, 
        111, 119, 91, 99, 97, 108, 108, 98, 97, 99, 
        107, 75, 101, 121, 93, 32, 61, 32, 111, 110, 
        114, 101, 97, 100, 121, 59, 10, 10, 32, 32, 
        32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 
        32, 111, 110, 114, 101, 97, 100, 121, 40, 101, 
        114, 114, 44, 32, 100, 97, 116, 97, 41, 32, 
        123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 
        100, 101, 108, 101, 116, 101, 32, 119, 105, 110, 
        100, 111, 119, 91, 99, 97, 108, 108, 98, 97, 
        99, 107, 75, 101, 121, 93, 59, 10, 10, 32, 
        32, 32, 32, 32, 32, 32, 32, 105, 102, 40, 
        101, 114, 114, 41, 32, 123, 10, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 
        101, 116, 117, 114, 110, 32, 99, 97, 108, 108, 
        98, 97, 99, 107, 40, 101, 114, 114, 41, 59, 
        10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 
        10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 
        116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 100, 97, 
        116, 97, 32, 61, 32, 74, 83, 79, 78, 46, 
        112, 97, 114, 115, 101, 40, 100, 97, 116, 97, 
        41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 105, 102, 32, 40, 100, 
        97, 116, 97, 41, 32, 123, 10, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 
        32, 100, 97, 116, 97, 32, 61, 32, 100, 97, 
        116, 97, 91, 34, 118, 97, 108, 117, 101, 34, 
        93, 59, 10, 9, 32, 32, 32, 32, 125, 10, 
        32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 
        99, 97, 116, 99, 104, 40, 101, 114, 114, 41, 
        32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 
        110, 32, 99, 97, 108, 108, 98, 97, 99, 107, 
        40, 110, 101, 119, 32, 69, 114, 114, 111, 114, 
        40, 39, 99, 111, 117, 108, 100, 32, 110, 111, 
        116, 32, 100, 101, 99, 111, 100, 101, 32, 114, 
        101, 115, 112, 111, 110, 115, 101, 58, 32, 39, 
        32, 43, 32, 100, 97, 116, 97, 41, 41, 59, 
        10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 
        10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 
        99, 97, 108, 108, 98, 97, 99, 107, 40, 110, 
        117, 108, 108, 44, 32, 100, 97, 116, 97, 41, 
        59, 10, 32, 32, 32, 32, 125, 10, 10, 32, 
        32, 32, 32, 118, 97, 114, 32, 97, 114, 103, 
        80, 97, 121, 108, 111, 97, 100, 32, 61, 32, 
        123, 125, 59, 10, 32, 32, 32, 32, 97, 114, 
        103, 80, 97, 121, 108, 111, 97, 100, 46, 118, 
        97, 108, 117, 101, 32, 61, 32, 97, 114, 103, 
        117, 109, 101, 110, 116, 59, 10, 32, 32, 32, 
        32, 85, 65, 105, 114, 115, 104, 105, 112, 46, 
        97, 99, 116, 105, 111, 110, 67, 97, 108, 108, 
        40, 97, 99, 116, 105, 111, 110, 78, 97, 109, 
        101, 44, 32, 74, 83, 79, 78, 46, 115, 116, 
        114, 105, 110, 103, 105, 102, 121, 40, 97, 114, 
        103, 80, 97, 121, 108, 111, 97, 100, 41, 44, 
        32, 99, 97, 108, 108, 98, 97, 99, 107, 75, 
        101, 121, 41, 59, 10, 125, 59, 10, 10, 10, 
        85, 65, 105, 114, 115, 104, 105, 112, 46, 102, 
        105, 110, 105, 115, 104, 65, 99, 116, 105, 111, 
        110, 32, 61, 32, 102, 117, 110, 99, 116, 105, 
        111, 110, 40, 101, 114, 114, 44, 32, 100, 97, 
        116, 97, 44, 32, 99, 97, 108, 108, 98, 97, 
        99, 107, 75, 101, 121, 41, 32, 123, 10, 32, 
        32, 32, 32, 105, 102, 32, 40, 99, 97, 108, 
        108, 98, 97, 99, 107, 75, 101, 121, 32, 105, 
        110, 32, 119, 105, 110, 100, 111, 119, 41, 32, 
        123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 
        118, 97, 114, 32, 99, 98, 32, 61, 32, 119, 
        105, 110, 100, 111, 119, 91, 99, 97, 108, 108, 
        98, 97, 99, 107, 75, 101, 121, 93, 59, 10, 
        32, 32, 32, 32, 32, 32, 32, 32, 99, 98, 
        40, 101, 114, 114, 44, 32, 100, 97, 116, 97, 
        41, 59, 10, 32, 32, 32, 32, 125, 10, 125, 
        59, 10, 10, 118, 97, 114, 32, 117, 97, 76, 
        105, 98, 114, 97, 114, 121, 82, 101, 97, 100, 
        121, 69, 118, 101, 110, 116, 32, 61, 32, 100, 
        111, 99, 117, 109, 101, 110, 116, 46, 99, 114, 
        101, 97, 116, 101, 69, 118, 101, 110, 116, 40, 
        39, 69, 118, 101, 110, 116, 39, 41, 59, 10, 
        117, 97, 76, 105, 98, 114, 97, 114, 121, 82, 
        101, 97, 100, 121, 69, 118, 101, 110, 116, 46, 
        105, 110, 105, 116, 69, 118, 101, 110, 116, 40, 
        39, 117, 97, 108, 105, 98, 114, 97, 114, 121, 
        114, 101, 97, 100, 121, 39, 44, 32, 116, 114, 
        117, 101, 44, 32, 116, 114, 117, 101, 41, 59, 
        10, 100, 111, 99, 117, 109, 101, 110, 116, 46, 
        100, 105, 115, 112, 97, 116, 99, 104, 69, 118, 
        101, 110, 116, 40, 117, 97, 76, 105, 98, 114, 
        97, 114, 121, 82, 101, 97, 100, 121, 69, 118, 
        101, 110, 116, 41, 59, 10
    };
    private static String b = new String();

    public NativeBridge()
    {
    }

    public static String a()
    {
        if (UAStringUtil.a(b))
        {
            try
            {
                b = new String(a, "UTF-8");
            }
            catch (UnsupportedEncodingException unsupportedencodingexception)
            {
                Logger.a("Unable to decode NativeBridge source.");
            }
        }
        return b;
    }

}
