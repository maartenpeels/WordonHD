<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.milkmangames.nativeextensions"><apiName>com.milkmangames.nativeextensions</apiName><apiDetail/><apiClassifier id="com.milkmangames.nativeextensions:PNAirship"><apiName>PNAirship</apiName><shortdesc> PNAirShip Controller </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> PNAirShip Controller </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_FOREGROUND_NOTIFICATION"><apiName>FOREGROUND_NOTIFICATION</apiName><shortdesc> Dispatched when a notification is received while the app is in the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a notification is received while the app is in the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_ALERT_DISMISSED"><apiName>ALERT_DISMISSED</apiName><shortdesc> Dispatched after an alert box showing a foreground notification is dismissed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after an alert box showing a foreground notification is dismissed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_RESUMED_FROM_NOTIFICATION"><apiName>RESUMED_FROM_NOTIFICATION</apiName><shortdesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_TOKEN_REGISTRATION_FAILED"><apiName>TOKEN_REGISTRATION_FAILED</apiName><shortdesc> Dispatched when a token or ID has failed to register with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a token or ID has failed to register with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_TOKEN_REGISTERED"><apiName>TOKEN_REGISTERED</apiName><shortdesc> Dispatched when a device token or ID has been successfully registered with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a device token or ID has been successfully registered with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNAirship_com.milkmangames.nativeextensions.events.PNAEvent_TYPES_DISABLED"><apiName>TYPES_DISABLED</apiName><shortdesc> Dispatched when some, but not all Notification types are disabled on the device </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNAEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when some, but not all Notification types are disabled on the device </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:PNAirship:disablePush"><apiName>disablePush</apiName><shortdesc>
	 Disables Push Notifications.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Disables Push Notifications.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:dispatchPendingNotifications"><apiName>dispatchPendingNotifications</apiName><shortdesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:enablePush"><apiName>enablePush</apiName><shortdesc>
	 Enables Push Notifications.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Enables Push Notifications.
	 
	 If the device is not currently registered for notifications, either because you passed 'false' for the autoRegister property of initAirship(), or because registration failed due to a network error or otherwise, this will cause registration to be attempted again.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:setAirshipTags"><apiName>setAirshipTags</apiName><shortdesc>
	 Sets a list of String tags to associate with the push user in the Urban Airship system.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tags</apiItemName><apiType value="Vector$String"/><apiDesc>Vector Array of tag Strings to set.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Sets a list of String tags to associate with the push user in the Urban Airship system.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:setQuietTime"><apiName>setQuietTime</apiName><shortdesc>
	 Sets 'quiet' period during which notifications will not be shown to the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>from</apiItemName><apiType value="Date"/><apiDesc>a Date object representing the beginning of the period for quiet time.
	 </apiDesc></apiParam><apiParam><apiItemName>to</apiItemName><apiType value="Date"/><apiDesc>a Date object representing the ending of the period for quiet time.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Sets 'quiet' period during which notifications will not be shown to the user.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:setSoundEnabled"><apiName>setSoundEnabled</apiName><shortdesc>
	 Enables or disables sounds on notificaitons.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>isEnabled</apiItemName><apiType value="Boolean"/><apiDesc>whether to play a sound on notification
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Enables or disables sounds on notificaitons.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:startSignificantLocationService"><apiName>startSignificantLocationService</apiName><shortdesc>
	 Starts the UA Significant Location Reporting service.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Starts the UA Significant Location Reporting service.  This may cause the location tracking permission dialog to display. 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNAirship:updateAlias"><apiName>updateAlias</apiName><shortdesc>
	 Changes the internal alias for the current push user in the Urban Airship system.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newAlias</apiItemName><apiType value="String"/><apiDesc>the new alias to set.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Changes the internal alias for the current push user in the Urban Airship system.
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:PNManual"><apiName>PNManual</apiName><shortdesc> PNManual Controller </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> PNManual Controller </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:PNManual_com.milkmangames.nativeextensions.events.PNMEvent_FOREGROUND_NOTIFICATION"><apiName>FOREGROUND_NOTIFICATION</apiName><shortdesc> Dispatched when a notification is received while the app is in the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNMEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a notification is received while the app is in the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNManual_com.milkmangames.nativeextensions.events.PNMEvent_ALERT_DISMISSED"><apiName>ALERT_DISMISSED</apiName><shortdesc> Dispatched after an alert box showing a foreground notification is dismissed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNMEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after an alert box showing a foreground notification is dismissed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNManual_com.milkmangames.nativeextensions.events.PNMEvent_RESUMED_FROM_NOTIFICATION"><apiName>RESUMED_FROM_NOTIFICATION</apiName><shortdesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNMEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNManual_com.milkmangames.nativeextensions.events.PNMEvent_TOKEN_REGISTRATION_FAILED"><apiName>TOKEN_REGISTRATION_FAILED</apiName><shortdesc> Dispatched when a token or ID has failed to register with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNMEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a token or ID has failed to register with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNManual_com.milkmangames.nativeextensions.events.PNMEvent_TOKEN_REGISTERED"><apiName>TOKEN_REGISTERED</apiName><shortdesc> Dispatched when a device token or ID has been successfully registered with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNMEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a device token or ID has been successfully registered with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:PNManual:__unregisterManual"><apiName>__unregisterManual</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNManual:dispatchPendingNotifications"><apiName>dispatchPendingNotifications</apiName><shortdesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNManual:registerForNotifications"><apiName>registerForNotifications</apiName><shortdesc>
	 Starts registration for notifications.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Starts registration for notifications.  Use this to register at a later time if you initialized with autoRegister set to false.
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:EasyPush"><apiName>EasyPush</apiName><shortdesc> EasyPush Native Extension </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> EasyPush Native Extension </apiDesc></apiClassifierDetail><apiOperation id="com.milkmangames.nativeextensions:EasyPush:areNotificationsAvailable"><apiName>areNotificationsAvailable</apiName><shortdesc>
	 Checks whether the current device is able to receive notifications.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if notifications are enabled on the current device; false otherwise.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks whether the current device is able to receive notifications.  This may be false if Parental Controls or other settings have disabled notifications.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:EasyPush:areNotificationsEnabled"><apiName>areNotificationsEnabled</apiName><shortdesc>
	 Checks whether notifications have been allowed and enabled by the user, for your specific app.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if the user has accepted notification receipt from your app
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks whether notifications have been allowed and enabled by the user, for your specific app.  On iOS, his will be false until notifications have been initialized and the user has selected 'Allow Notifications' in the popup window.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:EasyPush:initAirship"><apiName>initAirship</apiName><shortdesc>
	 Initializes push notifications for Urban Airship.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if airship already initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>the initialized Airship controller instance.  Afer calling initAirship(), you can access it with EasyPush.airship.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:PNAirship</apiOperationClassifier></apiReturn><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiDesc>your application key, from the Urban Airship control panel
	 </apiDesc></apiParam><apiParam><apiItemName>secret</apiItemName><apiType value="String"/><apiDesc>your application secret, from the Urban Airsihp control panel.  DON'T use your 'master' secret.
	 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiType value="String"/><apiDesc>if targeting Android, your GCM Project Number
	 </apiDesc></apiParam><apiParam><apiItemName>devMode</apiItemName><apiType value="Boolean"/><apiDesc>set to TRUE during development; FALSE before releasing to app store
	 </apiDesc></apiParam><apiParam><apiItemName>autoBadge</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to true to allow airship to automatically manage the badge numbers on the app icon
	 </apiDesc></apiParam><apiParam><apiItemName>autoAlertBox</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to TRUE if you want the extension to automatically display a pop up dialog box when a push is received, while your app is running.
	 </apiDesc></apiParam><apiParam><apiItemName>defaultAlias</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>an alias to assign to this user- this should be unique, like an email address- do not set otherwise
	 </apiDesc></apiParam><apiParam><apiItemName>autoRegister</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>attempt to register for notifications immediately.  default is true.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Initializes push notifications for Urban Airship.
	 
	 Call this as the very first thing in your app to ensure that notifications are received.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:EasyPush:initGameThrive"><apiName>initGameThrive</apiName><shortdesc>
	 Initializes push notifications with GameThrive.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if manual push already initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>the initialized GameThrive controller instance.  Afer calling initGameThrive(), you can access it with EasyPush.gameThrive.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:PNGameThrive</apiOperationClassifier></apiReturn><apiParam><apiItemName>gameThriveAppId</apiItemName><apiType value="String"/><apiDesc>your Game Thrive App ID
	 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiType value="String"/><apiDesc>if targeting Android, your GCM Project Number
	 </apiDesc></apiParam><apiParam><apiItemName>autoAlertBox</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to TRUE if you want the extension to automatically display a pop up dialog box when a push is received, while your app is running.
	 </apiDesc></apiParam><apiParam><apiItemName>autoRegister</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to TRUE if you want to delay registration for a future call to registerForNotifications()
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Initializes push notifications with GameThrive. 
	 
	 Call this as the very first thing in your app to ensure that notifications are received.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:EasyPush:initManual"><apiName>initManual</apiName><shortdesc>
	 Initializes push notifications in manual mode.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if manual push already initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>the initialized manual controller instance.  Afer calling initManual(), you can access it with EasyPush.manual.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:PNManual</apiOperationClassifier></apiReturn><apiParam><apiItemName>sender</apiItemName><apiType value="String"/><apiDesc>if targeting Android, your GCM Project Number
	 </apiDesc></apiParam><apiParam><apiItemName>autoAlertBox</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to TRUE if you want the extension to automatically display a pop up dialog box when a push is received, while your app is running.
	 </apiDesc></apiParam><apiParam><apiItemName>autoRegister</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>set to TRUE if you want to delay registration for a future call to registerForNotifications()
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Initializes push notifications in manual mode.  You can use this if you are running your own push notification handling server.
	 
	 Call this as the very first thing in your app to ensure that notifications are received.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:EasyPush:isSupported"><apiName>isSupported</apiName><shortdesc>
	 Check if the current device is running a platform supported by the extension (iOS or Android.)  Check isSupported() before initializing the extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if the current platform is supported by the extension.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the current device is running a platform supported by the extension (iOS or Android.)  Check isSupported() before initializing the extension.  Note that this only determines whether the platform itself is supported by the extension, not whether they are enabled on the particular system.
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions:EasyPush:VERSION"><apiName>VERSION</apiName><shortdesc> Version </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3.2.0</apiData><apiType value="String"/></apiValueDef><apiDesc> Version </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:EasyPush:com.milkmangames.nativeextensions:_isAirshipCreating"><apiName>_isAirshipCreating</apiName><shortdesc> Is Airship Creating </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> Is Airship Creating </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:EasyPush:com.milkmangames.nativeextensions:_isManualCreating"><apiName>_isManualCreating</apiName><shortdesc> Is Manual Creating </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> Is Manual Creating </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:EasyPush:airship:get"><apiName>airship</apiName><shortdesc>
	 Get the current instance of the Urban Airship controller; you must call EasyPush.initAirship() first.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions:PNAirship</apiValueClassifier></apiValueDef><apiDesc>
	 Get the current instance of the Urban Airship controller; you must call EasyPush.initAirship() first.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:EasyPush:gameThrive:get"><apiName>gameThrive</apiName><shortdesc>
	 Get the current instance of the GameThrive push controller; you must call EasyPush.initGameThrive() first.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions:PNGameThrive</apiValueClassifier></apiValueDef><apiDesc>
	 Get the current instance of the GameThrive push controller; you must call EasyPush.initGameThrive() first.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:EasyPush:manual:get"><apiName>manual</apiName><shortdesc>
	 Get the current instance of the Manual push controller; you must call EasyPush.initManual() first.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions:PNManual</apiValueClassifier></apiValueDef><apiDesc>
	 Get the current instance of the Manual push controller; you must call EasyPush.initManual() first.
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:PNGameThrive"><apiName>PNGameThrive</apiName><shortdesc> PNGameThrive Controller </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> PNGameThrive Controller </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:PNGameThrive_com.milkmangames.nativeextensions.events.PNGTEvent_FOREGROUND_NOTIFICATION"><apiName>FOREGROUND_NOTIFICATION</apiName><shortdesc> Dispatched when a notification is received while the app is in the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNGTEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a notification is received while the app is in the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNGameThrive_com.milkmangames.nativeextensions.events.PNGTEvent_ALERT_DISMISSED"><apiName>ALERT_DISMISSED</apiName><shortdesc> Dispatched after an alert box showing a foreground notification is dismissed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNGTEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after an alert box showing a foreground notification is dismissed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNGameThrive_com.milkmangames.nativeextensions.events.PNGTEvent_RESUMED_FROM_NOTIFICATION"><apiName>RESUMED_FROM_NOTIFICATION</apiName><shortdesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNGTEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a user clicked a notification they received while the app was in the background, causing the app to come to the foreground </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNGameThrive_com.milkmangames.nativeextensions.events.PNGTEvent_TOKEN_REGISTRATION_FAILED"><apiName>TOKEN_REGISTRATION_FAILED</apiName><shortdesc> Dispatched when a token or ID has failed to register with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNGTEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a token or ID has failed to register with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:PNGameThrive_com.milkmangames.nativeextensions.events.PNGTEvent_TOKEN_REGISTERED"><apiName>TOKEN_REGISTERED</apiName><shortdesc> Dispatched when a device token or ID has been successfully registered with the server </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.PNGTEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a device token or ID has been successfully registered with the server </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:PNGameThrive:dispatchPendingNotifications"><apiName>dispatchPendingNotifications</apiName><shortdesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispatch RESUMED_FROM_NOTIFICATION events for any notifications that have not yet been dispatched. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNGameThrive:registerForNotifications"><apiName>registerForNotifications</apiName><shortdesc>
	 Starts registration for notifications.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Starts registration for notifications.  Use this to register at a later time if you initialized with autoRegister set to false.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:PNGameThrive:setTags"><apiName>setTags</apiName><shortdesc>
	 Sets tags to associate with the current user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tags</apiItemName><apiType value="Object"/><apiDesc>set of key value String pairs
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Sets tags to associate with the current user.  These should be key value String pairs.
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>